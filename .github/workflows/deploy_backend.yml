name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/target/ROOT.war'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    env:
      SSH_USER: ${{ secrets.EC2_USER }}
      SSH_HOST: ${{ secrets.EC2_HOST }}
      SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Criar arquivo de chave SSH
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem

      - name: Copiar ROOT.war e realizar backup
        run: |
          set -e
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "Backup ROOT.war do container mytomcat no host remoto..."

          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
            mkdir -p /home/ec2-user/minimumpad/backups/backend && \
            docker cp mytomcat:/usr/local/tomcat/webapps/ROOT.war /home/ec2-user/minimumpad/backups/backend/ROOT_${TIMESTAMP}.war || echo 'Arquivo antigo não encontrado, prosseguindo...'"

          echo "Enviando novo ROOT.war para o servidor..."
          scp -i key.pem -o StrictHostKeyChecking=no backend/target/ROOT.war $SSH_USER@$SSH_HOST:/home/ec2-user/ROOT.war

          echo "Copiando novo ROOT.war para o container..."
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
            docker cp /home/ec2-user/ROOT.war mytomcat:/usr/local/tomcat/webapps/ROOT.war && \
            rm /home/ec2-user/ROOT.war"

      - name: Reiniciar container mytomcat
        run: |
          set -e
          echo "Reiniciando o container mytomcat..."
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker restart mytomcat"
          echo "Container reiniciado com sucesso."
