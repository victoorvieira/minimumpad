name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/target'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Criar arquivo de chave SSH
        run: |
          echo "üîê Criando arquivo de chave SSH"
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Copiar ROOT.war para servidor e manipular backup no container
        run: |
          echo "üì¶ Iniciando processo de deploy do backend..."
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)

          echo "üìÅ Criando diret√≥rio de backup e tentando copiar ROOT.war de dentro do container..."
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
            mkdir -p /home/ec2-user/minimumpad/backups/backend && \
            docker cp mytomcat:/usr/local/tomcat/webapps/ROOT.war /home/ec2-user/minimumpad/backups/backend/ROOT_${TIMESTAMP}.war || echo '‚ö†Ô∏è ROOT.war n√£o encontrado no container (talvez primeira execu√ß√£o)'"

          echo "üì§ Enviando novo ROOT.war para o servidor EC2..."
          scp -i key.pem -o StrictHostKeyChecking=no backend/target/ROOT.war $SSH_USER@$SSH_HOST:/home/ec2-user/ROOT.war

          echo "üì• Copiando novo ROOT.war para dentro do container e limpando tempor√°rio..."
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
            docker cp /home/ec2-user/ROOT.war mytomcat:/usr/local/tomcat/webapps/ROOT.war && \
            rm /home/ec2-user/ROOT.war"

      - name: Reiniciar container mytomcat
        run: |
          echo "‚ôªÔ∏è Reiniciando container mytomcat..."
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "\
            docker restart mytomcat"
          echo "‚úÖ Container mytomcat reiniciado com sucesso!"
        env:
          SSH_USER: ${{ secrets.EC2_USER }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
